@startuml

' Define participants (classes remain unchanged)
actor User as U
boundary AccountManagementUI as AUI
control AccountManager as AM
entity UserEn as UA
boundary BrowseUI as BUI
control BrowseManager as BM
entity ListingEn as L
entity LocationEn as Loc
entity SchedulingEn as Sched
boundary OfferUI as OUI
control OfferManager as OM
entity OfferEn as O
boundary ReviewUI as RUI
control ReviewManager as RM
entity ReviewEn as R

' Step 1: Sign Up
== Sign Up ==
Activate U
U -> AUI : 1.1 ClickSignUpButton(): void
activate AUI
AUI --> U : 1.2 RequestCredentials(): void
U -> AUI : 1.3 SubmitCredentials(email: String, password: String): void
AUI --> U : 1.4 ConfirmCredentials(): void
U -> AUI : 1.5 confirmSubmission(email: String, password: String): void
AUI -> AUI : 1.6 CheckEmailInUse(email: String): boolean
alt Email is already in use
    AUI --> U : 1.7.1 PromptNewEmail(): void
else Email is not in use
    AUI -> AM : 1.8.1 initiateAccountCreation(userDetails: UserDetails): void
    activate AM
    AM -> UA : 1.8.2 CreateAccountInDatabase(userDetails: UserDetails): void
    activate UA
    UA --> AM : 1.8.3 ConfirmAccountCreation(): void
    deactivate UA
    AM --> AUI : 1.8.4 NotifyUIAccountCreated(): void
    AUI --> U : 1.8.5 ShowAccountCreationSuccessMessage(): void
    deactivate AM
    deactivate AUI
end

' Step 2: Log In
== Log In ==
U -> AUI : 2.1 ClickLoginButton(): void
activate AUI
AUI --> U : 2.2 RequestCredentials(): void
U -> AUI : 2.3 SubmitCredentials(email: String, password: String): void
AUI -> UA : 2.4 VerifyCredentials(email: String, password: String): LoginStatus: boolean
activate UA
alt Credentials are correct
    UA --> AUI : 2.5.1 DisplayLoginSuccessMessage(): void
    AUI --> U : 2.5.2 ShowLoginSuccessMessage(): void
else Credentials are incorrect
    UA --> AUI : 2.6.1 DisplayLoginFailedMessage(errorMessage: String): void
    AUI --> U : 2.6.2 ShowLoginFailedMessage(): errorMessage: String
deactivate UA
end

' Step 3: Edit a user listing detail
== Edit a User Listing Detail ==
U -> BUI : 3.1 ClickEditListingButton(): void
activate BUI
BUI --> U : 3.2 RequestListingDetails(): void
U -> BUI : 3.3 SubmitUpdatedListing(listingDetails: ListingDetails): void
BUI -> BM : 3.4 UpdateListingInManager(listingDetails: ListingDetails): boolean
activate BM
BM -> L : 3.5 UpdateListingInDatabase(listingDetails: ListingDetails): boolean
activate L
L --> BM : 3.6 ConfirmListingUpdate(): UpdateStatus: boolean
deactivate L
BM --> BUI : 3.7 NotifyUIListingUpdated(): void
deactivate BM
BUI --> U : 3.8 ShowUpdateSuccessMessage(): void
deactivate BUI

' Step 4: Select a listing and make an offer on someone else's listing
== Make an Offer on a Listing ==
U -> BUI : 4.1 ClickViewLisingButton(): void
activate BUI
BUI -> BM : 4.2 FetchListingDetails(listingId: String): ListingDetails
activate BM
BM -> L : 4.3 RetrieveListingFromDatabase(listingId: String): ListingDetails
activate L
L --> BM : 4.4 ReturnListingDetails(): ListingDetails
deactivate L
BM --> BUI : 4.5 DisplayListingDetails(): void
deactivate BM
BUI --> U : 4.6 ShowListingDetails(): void
deactivate BUI

U -> OUI : 4.7 ClickMakeOfferButton(): void
activate OUI
OUI --> U : 4.8 PromptOfferDetailsInput(): void
U -> OUI : 4.9 SubmitOfferDetails(offerDetails: OfferDetails): void
OUI -> OM : 4.10 CreateOffer(offerDetails: OfferDetails): OfferStatus: boolean
activate OM
OM -> O : 4.11 SaveOfferToDatabase(offerDetails: OfferDetails)
activate O
O --> OM : 4.12 ConfirmOfferCreation(): OfferStatus: boolean
deactivate O
OM --> OUI : 4.13 NotifyUIOfferCreated(): void
deactivate OM
OUI --> U : 4.14 ShowOfferCreationSuccessMessage(): void
deactivate OUI

' Step 5: Accept / Reject offer from someone else
== Accept / Reject Offer ==
U -> OUI : 5.1 ClickViewOfferButton(): void
activate OUI
OUI -> OM : 5.2 RetrieveOfferDetails(userId: String): OfferDetails
activate OM
OM -> O : 5.3 FetchUserOfferDetails(userId: String): OfferDetails
activate O
O --> OM : 5.4 returnOfferDetails(): OfferDetails
deactivate O
OM --> OUI : 5.5 DisplayOfferDetails(offerDetails: OfferDetails): void
deactivate OM
OUI --> U : 5.6 ShowOfferDetails(): void

alt User chooses to accept Offer
    U -> OUI : 5.7.1 clickAcceptOfferButton(): void
    OUI -> OM : 5.7.2 AcceptOffer(offerId: String)
    activate OM
    OM -> O : 5.7.3 UpdateOfferStatusToAccepted(offerId: String)
    activate O
    O --> OM : 5.7.4 confirmStatusUpdate(): Status: boolean
    deactivate O
    OM --> OUI : 5.7.5 OfferAccepted(): void
    deactivate OM
    OUI --> U : 5.7.6 showOfferAcceptedMessage(): void
else User chooses to reject Offer
    U -> OUI : 5.8.1 clickRejectOfferButton(): void
    OUI -> OM : 5.8.2 rejectOffer(offerId: String): void
    activate OM
    OM -> O : 5.8.3 UpdateOfferStatusToRejected(offerId: String)
    activate O
    O --> OM : 5.8.4 ConfirmStatusUpdate(): boolean
    deactivate O
    OM --> OUI : 5.8.5 OfferRejected(): void
    deactivate OM
    OUI --> U : 5.8.6 ShowOfferRejectedMessage(): void
    deactivate OUI
end
' Step 6: Create a new listing
== Create a New Listing ==
U -> BUI : 6.1 ClickCreateListingButton(): void
activate BUI
BUI -> U : 6.2 InitializeListingInstance (listingType: String, details: ListingDetails)
U -> BUI : 6.3 EnterListingDetails(): void
BUI -> BM : 6.4 CreateNewListing(listing: Listing): void

activate BM
BM -> L : 6.5 CreateListingInDatabase(listing: Listing): void
activate L
L --> BM : 6.8 ConfirmListingCreation(): boolean
deactivate L
BM --> BUI : 6.9 NotifyUICreationSuccess(): void
deactivate BM
BUI --> U : 6.10 ShowCreationSuccessMessage(): void
deactivate BUI

' Step 7: Rate a Listing
== Rate a Listing ==
U -> RUI : 7.1 ClickRateListingButton(): void
activate RUI
RUI --> U : 7.2 DisplayListingForRating(Listingid: String): void
U -> RUI : 7.3 RatingandReview(rating, review): void
RUI -> RM : 7.4 CreateReview(reviewDetails: ReviewDetails): boolean
activate RM
RM -> R : 7.5 SaveReviewToDatabase(reviewDetails: ReviewDetails): boolean
activate R
R --> RM : 7.6 ConfirmReviewCreation(): boolean
deactivate R
RM --> RUI : 7.7 notifyUIReviewSubmitted(): void
deactivate RM
RUI --> U : 7.8 showReviewSubmissionSuccessMessage(): void
deactivate RUI

@enduml