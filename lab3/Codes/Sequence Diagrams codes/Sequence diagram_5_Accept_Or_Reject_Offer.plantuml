@startuml

' Define participants (classes remain unchanged)
actor User as U
boundary OfferUI as OUI
control OfferManager as OM
entity OfferEn as O

' Step 5: Accept / Reject offer from someone else
== Accept / Reject Offer ==
U -> OUI : 5.1 ClickViewOfferButton(): void
activate U
activate OUI
OUI -> OM : 5.2 RetrieveOfferDetails(userId: String): OfferDetails
activate OM
OM -> O : 5.3 FetchUserOfferDetails(userId: String): OfferDetails
activate O
O --> OM : 5.4 returnOfferDetails(): OfferDetails
deactivate O
OM --> OUI : 5.5 DisplayOfferDetails(offerDetails: OfferDetails): void
deactivate OM
OUI --> U : 5.6 ShowOfferDetails(): void

alt User chooses to accept Offer
    U -> OUI : 5.7.1 clickAcceptOfferButton(): void
    OUI -> OM : 5.7.2 AcceptOffer(offerId: String)
    activate OM
    OM -> O : 5.7.3 UpdateOfferStatusToAccepted(offerId: String)
    activate O
    O --> OM : 5.7.4 confirmStatusUpdate(): Status: boolean
    deactivate O
    OM --> OUI : 5.7.5 OfferAccepted(): void
    deactivate OM
    OUI --> U : 5.7.6 showOfferAcceptedMessage(): void
else User chooses to reject Offer
    U -> OUI : 5.8.1 clickRejectOfferButton(): void
    OUI -> OM : 5.8.2 rejectOffer(offerId: String): void
    activate OM
    OM -> O : 5.8.3 UpdateOfferStatusToRejected(offerId: String)
    activate O
    O --> OM : 5.8.4 ConfirmStatusUpdate(): boolean
    deactivate O
    OM --> OUI : 5.8.5 OfferRejected(): void
    deactivate OM
    OUI --> U : 5.8.6 ShowOfferRejectedMessage(): void
    deactivate OUI
    deactivate U
end

@enduml